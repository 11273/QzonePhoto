name: Build/release Electron app

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: pnpm run build:linux -p never

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: pnpm run build:mac -p never

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win -p never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/*/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: true
          body_path: RELEASE_NOTES.md
          prerelease: true
          files: |
            artifacts/dist-*/*.exe
            artifacts/dist-*/*.zip
            artifacts/dist-*/*.dmg
            artifacts/dist-*/*.AppImage
            artifacts/dist-*/*.deb
            artifacts/dist-*/latest*.yml
            artifacts/dist-*/*.exe.blockmap
            artifacts/dist-*/*.dmg.blockmap
            artifacts/dist-*/*.zip.blockmap
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
